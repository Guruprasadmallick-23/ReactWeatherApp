{"version":3,"sources":["App.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","key","fetch","then","res","json","result","console","log","name","sys","country","d","date","String","window","Date","slice","dateBuilder","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKAEMA,EACC,GADDA,EAEE,2CAqEOC,MAlEf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KA0BA,OACE,qBAAKC,UACoB,oBAAhBF,EAAQG,KAAsBH,EAAQG,KAAKC,KAAO,GAAK,UAC5D,WAAY,MAFhB,SAKC,iCACE,qBAAKF,UAAU,eAAf,SACE,uBACCG,KAAK,OACLH,UAAU,aACVI,YAAY,kBACZC,SAAU,SAACC,GAAD,OAAOT,EAASS,EAAEC,OAAOC,QACjCA,MAAOZ,EACPa,WAvCK,SAACH,GACA,UAAVA,EAAEI,KACJC,MAAM,GAAD,OAAIlB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACvDmB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLlB,EAAS,IACTE,EAAWgB,GACXC,QAAQC,IAAIF,WAoCS,oBAAhBjB,EAAQG,KACd,gCACF,sBAAKD,UAAU,iBAAf,UACE,sBAAKA,UAAU,WAAf,UAA2BF,EAAQoB,KAAnC,IAA0CpB,EAAQqB,IAAIC,WACtD,qBAAKpB,UAAU,OAAf,SApCa,SAACqB,GACnB,IAMAC,EAAOC,OAAO,IAAIC,OAAOC,MAI7B,OAHAH,EAAOA,EAAKI,MAAM,EAAG,IA4BWC,CAAY,IAAIF,WAEzC,sBAAKzB,UAAU,gBAAf,UACE,sBAAKA,UAAU,cAAf,UACC4B,KAAKC,MAAM/B,EAAQG,KAAKC,MADzB,WAGA,qBAAKF,UAAU,UAAf,SAA0BF,EAAQA,QAAQ,GAAGG,aAG1C,SC/DZ6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.ce5274ec.chunk.js","sourcesContent":["import React, {useState} from \"react\"; \nimport \"./index.css\";\nconst api ={\n  key: \"\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n}\n\nfunction App() {\n  \n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  const search = (e) => {\n    if (e.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setQuery(\"\");\n          setWeather(result);\n          console.log(result);\n        });\n    }\n  };\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n     \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\",\n  \"Friday\", \"Saturday\"];\n  \n\nlet date = String(new window.Date());\ndate = date.slice(3, 15);\n\n\nreturn date;\n\n  }\n  return (\n    <div className={\n      typeof weather.main != \"undefined\" ? weather.main.temp > 18 ? \"app hot\" \n      : \"app cold\" :\"app\" \n        }>\n       \n     <main>\n       <div className=\"search-value\">\n         <input \n          type=\"text\"\n          className=\"search-bar\"\n          placeholder=\"Search here....\"\n          onChange={(e) => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n        />\n       </div>\n    \n       {typeof weather.main != \"undefined\" ? (\n         <div>\n       <div className=\"location-value\">\n         <div className=\"location\">{weather.name},{weather.sys.country}</div>\n         <div className=\"date\">{dateBuilder(new Date())}</div>\n       </div>\n       <div className=\"weather-value\">\n         <div className=\"temperature\">\n         {Math.round(weather.main.temp)}Â°C\n         </div>\n         <div className=\"weather\">{weather.weather[0].main}</div>\n       </div>\n       </div>\n       ) : (\"\")}\n     </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}